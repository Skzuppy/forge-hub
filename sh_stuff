
if _G.HopInterval and _G.HopBtn == "false" then
    wait(tonumber(_G.HopInterval))
    local teleportFunc = queueonteleport or queue_on_teleport or syn and syn.queue_on_teleport
    if teleportFunc then
        teleportFunc([[
            repeat
                wait()
            until game:IsLoaded()
            wait(1)
            _G.HopBtn = ]]..tostring(_G.HopBtn)..[[
            _G.HopInterval = ]]..tostring(_G.HopInterval)..[[
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Skzuppy/forge-hub/refs/heads/main/sh_stuff"))()
        ]])
    end
    repeat
        local servers = {}
        local req = request({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", game.PlaceId)})
        local body = game:GetService("HttpService"):JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            print("failed to find serv")
        end
        wait(1)
    until false == true
end

if _G.HopBtn == "true" then


local Component = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local TextLabel_2 = Instance.new("TextLabel")

-- Properties

Component.Name = "Component"
Component.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
Component.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = Component
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.new(0.168627, 0.168627, 0.168627)
Frame.BorderColor3 = Color3.new(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.Size = UDim2.new(0.14428243, 0, 0.129104465, 0)
Frame.Draggable = true
Frame.Active = true
Frame.Selectable = true

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.BorderColor3 = Color3.new(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(-0.00341296918, 0, 0.242812976, 0)
TextLabel.Size = UDim2.new(1, 0, -0.187793463, 0)
TextLabel.Font = Enum.Font.Unknown
TextLabel.Text = "Forge Hub Server Hopper"
TextLabel.TextColor3 = Color3.new(1, 0.701961, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextStrokeTransparency = 0
TextLabel.TextWrapped = true

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.new(0.0156863, 1, 0)
TextButton.BorderColor3 = Color3.new(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.174061432, 0, 0.320813835, 0)
TextButton.Size = UDim2.new(0.641638219, 0, 0.350547701, 0)
TextButton.Font = Enum.Font.SourceSansBold
TextButton.Text = "Server Hop"
TextButton.TextColor3 = Color3.new(1, 1, 1)
TextButton.TextScaled = true
TextButton.TextSize = 14
TextButton.TextStrokeTransparency = 0
TextButton.TextWrapped = true

UICorner.Parent = TextButton

TextLabel_2.Parent = Frame
TextLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel_2.BackgroundTransparency = 1
TextLabel_2.BorderColor3 = Color3.new(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(-0.00682593836, 0, 0.907914579, 0)
TextLabel_2.Size = UDim2.new(1, 0, -0.133020371, 0)
TextLabel_2.Font = Enum.Font.Unknown
TextLabel_2.Text = "* This UI is Drag-able"
TextLabel_2.TextColor3 = Color3.new(1, 0.701961, 0)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextStrokeTransparency = 0
TextLabel_2.TextWrapped = true

TextButton.Activated:Connect(function()
    TextButton.Text = "Called for Teleport!"
    local teleportFunc = queueonteleport or queue_on_teleport or syn and syn.queue_on_teleport
    if teleportFunc then
        teleportFunc([[
            repeat
                wait()
            until game:IsLoaded()
            wait(1)
            _G.HopBtn = ]]..tostring(_G.HopBtn)..[[
            _G.HopInterval = ]]..tostring(_G.HopInterval)..[[
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Skzuppy/forge-hub/refs/heads/main/sh_stuff"))()
        ]])
    end
    repeat
        local servers = {}
        local req = request({Url = string.format("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Desc&limit=100&excludeFullGames=true", game.PlaceId)})
        local body = game:GetService("HttpService"):JSONDecode(req.Body)

        if body and body.data then
            for i, v in next, body.data do
                if type(v) == "table" and tonumber(v.playing) and tonumber(v.maxPlayers) and v.playing < v.maxPlayers and v.id ~= game.JobId then
                    table.insert(servers, 1, v.id)
                end
            end
        end

        if #servers > 0 then
            game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, servers[math.random(1, #servers)], game.Players.LocalPlayer)
        else
            print("failed to find serv")
        end
        wait(1)
    until false == true
end)
end
